package com.practice.linkedin.glassdoor;

import java.util.HashMap;
import java.util.Map;

public class CommonAncestorsOfTwoNodesInBTree {
	
	static Map<Node, Boolean> hasP = new HashMap<>();
	static Map<Node, Boolean> hasQ = new HashMap<>();
	
	public static void main(String[] args) {
		Node node = new Node(100, null, null);
		Node root = node.buildTree();
		//node.print(root);
		
		System.out.println(findCommonAncestors(root, 6, 8));
	}

	private static int findCommonAncestors(Node root, int p, int q) {
		
		if(hasLeft(root, p) && hasLeft(root, q)) return findCommonAncestors(root.left, p, q);
		
		else if(hasRight(root, p) && hasRight(root, q)) return findCommonAncestors(root.right, p, q);
		
			 else  return root.data;
		
	}

	private static boolean hasRight(Node root, int q) {

		return false;
	}

	private static boolean hasLeft(Node root, int p) {
		if(root == null) {
			hasP.add(root, true);
			return false;
		}
		
		if(root.data == p) {
			hasP.add(root, true);
			return true;
		}
		
		
		return (hasLeft(root, p) || hasRight(root, p));
		
	}
	
	
}