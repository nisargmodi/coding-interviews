package com.practice.linkedin.glassdoor;

public class BinarySearchInRotatedArray {
	public static void main(String[] args) {
		
		int[] arr = {4, 5, 6, 7, 8, 9, 1, 2, 3};
		int key = 6;
		int i = search(arr, 0, arr.length-1, key);
	}

//Returns index of key in arr[l..h] if key is present,
//otherwise returns -1
	public static int search(int arr[], int lo, int hi, int key) {
	 if (lo > hi) return -1;
	
	 int mid = lo+ (hi-lo)/2;
	 if (arr[mid] == key) return mid;
	
	 /* If arr[l...mid] is sorted */
	 if (arr[lo] <= arr[mid])
	 {
	     /* As this subarray is sorted, we can quickly
	        check if key lies in half or other half */
	     if (key >= arr[lo] && key <= arr[mid])
	        return search(arr, lo, mid-1, key);
	
	     return search(arr, mid+1, hi, key);
	 }
	
	 /* If arr[l..mid] is not sorted, then arr[mid... r]
	    must be sorted*/
	 if (key >= arr[mid] && key <= arr[hi])
	     return search(arr, mid+1, hi, key);
	
	 return search(arr, lo, mid-1, key);
	}

}